diff --git a/node_modules/next-auth/README.md b/node_modules/next-auth/README.md
index f3765bd..ee1490f 100644
--- a/node_modules/next-auth/README.md
+++ b/node_modules/next-auth/README.md
@@ -77,8 +77,7 @@ NextAuth.js can be used with or without a database.
 - Designed to be secure by default and encourage best practices for safeguarding user data
 - Uses Cross-Site Request Forgery (CSRF) Tokens on POST routes (sign in, sign out)
 - Default cookie policy aims for the most restrictive policy appropriate for each cookie
-- When JSON Web Tokens are enabled, they are signed by default (JWS) with HS512
-- Use JWT encryption (JWE) by setting the option `encryption: true` (defaults to A256GCM)
+- When JSON Web Tokens are enabled, they are encrypted by default (JWE) with A256GCM
 - Auto-generates symmetric signing and encryption keys for developer convenience
 - Features tab/window syncing and session polling to support short lived sessions
 - Attempts to implement the latest guidance published by [Open Web Application Security Project](https://owasp.org)
diff --git a/node_modules/next-auth/core/lib/default-callbacks.js b/node_modules/next-auth/core/lib/default-callbacks.js
index 24e2947..b1d0701 100644
--- a/node_modules/next-auth/core/lib/default-callbacks.js
+++ b/node_modules/next-auth/core/lib/default-callbacks.js
@@ -13,7 +13,7 @@ const defaultCallbacks = {
     url,
     baseUrl
   }) {
-    if (url.startsWith(baseUrl)) return url;else if (url.startsWith("/")) return new URL(url, baseUrl).toString();
+    if (url.startsWith("/")) return new URL(url, baseUrl).toString();else if (new URL(url).origin === baseUrl) return url;
     return baseUrl;
   },
 
diff --git a/node_modules/next-auth/core/types.d.ts b/node_modules/next-auth/core/types.d.ts
index 9c1c63a..2578aed 100644
--- a/node_modules/next-auth/core/types.d.ts
+++ b/node_modules/next-auth/core/types.d.ts
@@ -404,6 +404,7 @@ export interface DefaultSession extends Record<string, unknown> {
         name?: string | null;
         email?: string | null;
         image?: string | null;
+        id?: string | null;
     };
     expires: ISODateString;
 }
