import { useEffect,useState } from 'react'
import type { NextPage } from 'next'

import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import College from '../src/common/College'
import { fetchColleges } from '../src/lib/fetch'
import Navigation from '../src/common/Navigation'
import {Colleges} from '@prisma/client'
import SimpleBar from 'simplebar-react'
import Content from '../src/common/Content'
import Footer from '../src/common/Footer'
import Router from 'next/router'
import {useSession} from 'next-auth/react'
import CollegeModal from '../src/common/modal/CollegeModal';
import AuthModal from '../src/common/modal/AuthModal';
export async function getServerSideProps() {
  const colleges = await fetchColleges();
  return {
    props: {
      colleges: colleges || []
    }
  }
  
}

const Home: NextPage = ({colleges}:any) => {
  const [reactColleges, setColleges] = useState<JSX.Element[]>([])
  const {data: session, status} = useSession();
  const [isCollegeOpen, setIsCollegeOpen] = useState(false);
  const [isOpen, setIsOpen] = useState(false);
  const filterColleges = (e:any) => {
  let colls = colleges.filter((college:any) => {
    return college.name.toLowerCase().includes(e.target.value.toLowerCase())
  })
  setColleges(colls.map(mapColleges))
  }

  const mapColleges = (college:Colleges) => {
   return <College 
      key={college.name}
      name={college.name}
      description={college.description}
      logo={college.logo}
      id={college.id}
    />
  }
  const newCollege =() => {
    if (status === 'authenticated'){
      setIsCollegeOpen(true);
    }
    else {
      setIsOpen(true);
    }
  }
  
  useEffect(() => {
    setColleges(colleges.map(mapColleges))
    let path = Router.asPath.split('/')
    if (path[1] === 'create-college'){
      setIsCollegeOpen(true);
      Router.push('/')
    }
  },[colleges])
  return (
    <div className={styles.container}>
      <Head>
        <title>Akose</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navigation />
      <div className={styles.header}>
        <div className={styles.overlay}>
            <h1>Find Your College. Find Your Home.</h1>
            </div>
          </div>
      <main>
        <div>
          
        </div>
        <div className={styles.title}>
          <input onChange={filterColleges} type="text" placeholder="Search for a college" />
        </div>
       {reactColleges.length > 0 && <SimpleBar className={styles.scroll} forceVisible="y" autoHide={false} style={{maxHeight: 600}}>
        {reactColleges}
        </SimpleBar>}
      <div className={styles.whatIs}>
        <h1>What Can You Do With Akose?</h1>
      </div>
          <div className={styles.contents}>
            <Content title="Find Your Next Hub"
            description="Join an Akose College to find opportunities, events and resources, related to your interests. Never miss out on a new opportunity or event. "

            />
            <Content title="Build a Community For Your People"
            description="By creating an Akose College, you can create a place where people with similar interests can come together to provide career related support."
            />
            <Content title="Provide for your Community"
            description="When you provide for your college by posting, you make your college stronger and better place for all." 
            />

        </div>
        <div className={styles.build}>
          <h2>Want to build your own college?</h2>
          <button onClick={newCollege}>Create a New College</button>
        </div>
      </main>
      <AuthModal callBackUrl={'http://localhost:3000/create-college'} type={'Login'} setOpen={setIsOpen} isOpen={isOpen} />
      <CollegeModal isOpen={isCollegeOpen} setOpen={setIsCollegeOpen} type={'create'}/>
    <Footer />
    </div>
  )
}

export default Home
